{
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\node-tcs-programs\\\\EjsDashboardDemo\\\\dashboard\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\node-tcs-programs\\\\EjsDashboardDemo\\\\dashboard\",\"filename\":\"D:\\\\node-tcs-programs\\\\EjsDashboardDemo\\\\dashboard\\\\app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\node-tcs-programs\\\\EjsDashboardDemo\\\\dashboard\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.2": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard",
      "filename": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard\\app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard\\app.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard\\",
        "sourceFileName": "app.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n//import express from 'express';\nvar express = require('express');\n\nvar MongoClient = require('mongodb').MongoClient; //import bodyParser from 'body-parser';\n\n\nvar bodyParser = require('body-parser');\n\nvar port = 8900;\nvar app = express();\nvar db;\nvar mongourl = 'mongodb://127.0.0.1:27017/';\nvar col_name = 'userlist';\napp.use(express[\"static\"](__dirname + '/public'));\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json()); //app.use(express.json());\n\napp.set('view engine', 'ejs');\napp.set('views', './views'); // Get Data from datbase and display on index\n\napp.get('/', function (req, res) {\n  db.collection(col_name).find().toArray(function (err, result) {\n    if (err) throw err;\n    res.render('index.ejs', {\n      data: result\n    });\n  });\n}); // Post data from ui\n\napp.post('/addData', function (req, res) {\n  db.collection(col_name) // In Req.body we will recive the data\n  // from form.\n  .insert(req.body, function (err, result) {\n    if (err) throw err;\n    console.log('data.inserted');\n  });\n  res.redirect('/');\n}); // Delete Selected User\n\napp[\"delete\"]('/delete_user', function (req, res) {\n  db.collection(col_name).findOneAndDelete({\n    \"name\": req.body.name\n  }, function (err, result) {\n    if (err) return res.send(500, err);\n    res.send({\n      message: 'success'\n    });\n  });\n}); // Find user by name\n\napp.post('/find_by_name', function (req, res) {\n  var name = req.body.name;\n  db.collection(col_name).find({\n    name: name\n  }).toArray(function (err, result) {\n    if (err) throw err;\n    res.send(result);\n  });\n}); // Update User\n\napp.put('/update_user', function (req, res) {\n  db.collection(col_name).findOneAndUpdate({\n    \"name\": req.body.name\n  }, {\n    $set: {\n      name: req.body.name,\n      email: req.body.email,\n      phone: req.body.phone\n    }\n  }, {\n    upsert: true\n  }, function (err, result) {\n    if (err) return res.send(err);\n    res.send(result);\n  });\n}); // Opening Add User page\n\napp.get('/addUser', function (req, res) {\n  res.render('admin');\n});\nMongoClient.connect(mongourl, function (err, client) {\n  if (err) throw err;\n  db = client.db('march_dashboard');\n  app.listen(port, function () {\n    console.log(\"Server running on port \".concat(port));\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIk1vbmdvQ2xpZW50IiwiYm9keVBhcnNlciIsInBvcnQiLCJhcHAiLCJkYiIsIm1vbmdvdXJsIiwiY29sX25hbWUiLCJ1c2UiLCJfX2Rpcm5hbWUiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwic2V0IiwiZ2V0IiwicmVxIiwicmVzIiwiY29sbGVjdGlvbiIsImZpbmQiLCJ0b0FycmF5IiwiZXJyIiwicmVzdWx0IiwicmVuZGVyIiwiZGF0YSIsInBvc3QiLCJpbnNlcnQiLCJib2R5IiwiY29uc29sZSIsImxvZyIsInJlZGlyZWN0IiwiZmluZE9uZUFuZERlbGV0ZSIsIm5hbWUiLCJzZW5kIiwibWVzc2FnZSIsInB1dCIsImZpbmRPbmVBbmRVcGRhdGUiLCIkc2V0IiwiZW1haWwiLCJwaG9uZSIsInVwc2VydCIsImNvbm5lY3QiLCJjbGllbnQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUVBLElBQU1DLFdBQVcsR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBUCxDQUFtQkMsV0FBdkMsQyxDQUNBOzs7QUFDQSxJQUFNQyxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUVBLElBQU1HLElBQUksR0FBRyxJQUFiO0FBQ0EsSUFBTUMsR0FBRyxHQUFHTCxPQUFPLEVBQW5CO0FBQ0EsSUFBSU0sRUFBSjtBQUNBLElBQU1DLFFBQVEsR0FBRyw0QkFBakI7QUFDQSxJQUFNQyxRQUFRLEdBQUcsVUFBakI7QUFFQUgsR0FBRyxDQUFDSSxHQUFKLENBQVFULE9BQU8sVUFBUCxDQUFlVSxTQUFTLEdBQUMsU0FBekIsQ0FBUjtBQUVBTCxHQUFHLENBQUNJLEdBQUosQ0FBUU4sVUFBVSxDQUFDUSxVQUFYLENBQXNCO0FBQUNDLEVBQUFBLFFBQVEsRUFBQztBQUFWLENBQXRCLENBQVI7QUFD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ZDtBQUdEQyxNQUFBQSxLQUFLLEVBQUN2QixHQUFHLENBQUNXLElBQUosQ0FBU1k7QUFIZDtBQURnQyxHQUQ3QyxFQU9NO0FBQ0VDLElBQUFBLE1BQU0sRUFBQztBQURULEdBUE4sRUFTTSxVQUFDbkIsR0FBRCxFQUFLQyxNQUFMLEVBQWdCO0FBQ2QsUUFBR0QsR0FBSCxFQUFRLE9BQU9KLEdBQUcsQ0FBQ2dCLElBQUosQ0FBU1osR0FBVCxDQUFQO0FBQ1JKLElBQUFBLEdBQUcsQ0FBQ2dCLElBQUosQ0FBU1gsTUFBVDtBQUNILEdBWkw7QUFhSCxDQWRELEUsQ0FnQkE7O0FBQ0FqQixHQUFHLENBQUNVLEdBQUosQ0FBUSxVQUFSLEVBQW1CLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFhO0FBQzVCQSxFQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxPQUFYO0FBQ0gsQ0FGRDtBQUlBckIsV0FBVyxDQUFDdUMsT0FBWixDQUFvQmxDLFFBQXBCLEVBQTZCLFVBQUNjLEdBQUQsRUFBS3FCLE1BQUwsRUFBZ0I7QUFDekMsTUFBR3JCLEdBQUgsRUFBUSxNQUFNQSxHQUFOO0FBQ1JmLEVBQUFBLEVBQUUsR0FBR29DLE1BQU0sQ0FBQ3BDLEVBQVAsQ0FBVSxpQkFBVixDQUFMO0FBQ0FELEVBQUFBLEdBQUcsQ0FBQ3NDLE1BQUosQ0FBV3ZDLElBQVgsRUFBaUIsWUFBSztBQUNsQndCLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixrQ0FBc0N6QixJQUF0QztBQUNILEdBRkQ7QUFHSCxDQU5EIiwic291cmNlUm9vdCI6IkQ6XFxub2RlLXRjcy1wcm9ncmFtc1xcRWpzRGFzaGJvYXJkRGVtb1xcZGFzaGJvYXJkXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvL2ltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcblxuY29uc3QgTW9uZ29DbGllbnQgPSByZXF1aXJlKCdtb25nb2RiJykuTW9uZ29DbGllbnQ7XG4vL2ltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuXG5jb25zdCBwb3J0ID0gODkwMDtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmxldCBkYjtcbmNvbnN0IG1vbmdvdXJsID0gJ21vbmdvZGI6Ly8xMjcuMC4wLjE6MjcwMTcvJ1xuY29uc3QgY29sX25hbWUgPSAndXNlcmxpc3QnO1xuXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKF9fZGlybmFtZSsnL3B1YmxpYycpKTtcblxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe2V4dGVuZGVkOnRydWV9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbi8vYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5cbmFwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ2VqcycpO1xuYXBwLnNldCgndmlld3MnLCAnLi92aWV3cycpO1xuXG4vLyBHZXQgRGF0YSBmcm9tIGRhdGJhc2UgYW5kIGRpc3BsYXkgb24gaW5kZXhcbmFwcC5nZXQoJy8nLCAocmVxLHJlcyk9PntcbiAgICBkYi5jb2xsZWN0aW9uKGNvbF9uYW1lKS5maW5kKCkudG9BcnJheSgoZXJyLHJlc3VsdCkgPT4ge1xuICAgICAgICBpZihlcnIpIHRocm93IGVycjtcbiAgICAgICAgcmVzLnJlbmRlcignaW5kZXguZWpzJyx7ZGF0YTpyZXN1bHR9KVxuICAgIH0pXG59KVxuXG4vLyBQb3N0IGRhdGEgZnJvbSB1aVxuYXBwLnBvc3QoJy9hZGREYXRhJywgKHJlcSxyZXMpID0+IHtcbiAgICBkYi5jb2xsZWN0aW9uKGNvbF9uYW1lKVxuICAgICAgICAvLyBJbiBSZXEuYm9keSB3ZSB3aWxsIHJlY2l2ZSB0aGUgZGF0YVxuICAgICAgICAvLyBmcm9tIGZvcm0uXG4gICAgICAgIC5pbnNlcnQocmVxLmJvZHksIChlcnIscmVzdWx0KSA9PiB7XG4gICAgICAgICAgICBpZihlcnIpIHRocm93IGVycjtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdkYXRhLmluc2VydGVkJyk7XG4gICAgICAgIH0pXG4gICAgcmVzLnJlZGlyZWN0KCcvJyk7XG59KVxuICAgXG4vLyBEZWxldGUgU2VsZWN0ZWQgVXNlclxuYXBwLmRlbGV0ZSgnL2RlbGV0ZV91c2VyJywocmVxLHJlcykgPT4ge1xuICAgIGRiLmNvbGxlY3Rpb24oY29sX25hbWUpLmZpbmRPbmVBbmREZWxldGUoe1xuICAgICAgICBcIm5hbWVcIjpyZXEuYm9keS5uYW1lXG4gICAgfSwoZXJyLHJlc3VsdCkgPT4geyAgXG4gICAgICAgIGlmIChlcnIpIHJldHVybiByZXMuc2VuZCg1MDAsZXJyKVxuICAgICAgICByZXMuc2VuZCh7bWVzc2FnZTogJ3N1Y2Nlc3MnfSlcbiAgICB9KVxufSlcblxuLy8gRmluZCB1c2VyIGJ5IG5hbWVcbmFwcC5wb3N0KCcvZmluZF9ieV9uYW1lJywocmVxLHJlcykgPT4ge1xuICAgIGxldCBuYW1lID0gcmVxLmJvZHkubmFtZTtcbiAgICBkYi5jb2xsZWN0aW9uKGNvbF9uYW1lKVxuICAgICAgLmZpbmQoe25hbWU6bmFtZX0pXG4gICAgICAudG9BcnJheSgoZXJyLHJlc3VsdCkgPT4ge1xuICAgICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICAgIHJlcy5zZW5kKHJlc3VsdClcbiAgICAgIH0pXG59KTtcblxuLy8gVXBkYXRlIFVzZXJcbmFwcC5wdXQoJy91cGRhdGVfdXNlcicsKHJlcSxyZXMpPT57XG4gICAgZGIuY29sbGVjdGlvbihjb2xfbmFtZSlcbiAgICAgICAgLmZpbmRPbmVBbmRVcGRhdGUoe1wibmFtZVwiOnJlcS5ib2R5Lm5hbWV9LHtcbiAgICAgICAgICAgICRzZXQ6e1xuICAgICAgICAgICAgICAgIG5hbWU6cmVxLmJvZHkubmFtZSxcbiAgICAgICAgICAgICAgICBlbWFpbDpyZXEuYm9keS5lbWFpbCxcbiAgICAgICAgICAgICAgICBwaG9uZTpyZXEuYm9keS5waG9uZVxuICAgICAgICAgICAgfVxuICAgICAgICB9LHtcbiAgICAgICAgICAgIHVwc2VydDp0cnVlXG4gICAgICAgIH0sKGVycixyZXN1bHQpID0+IHtcbiAgICAgICAgICAgIGlmKGVycikgcmV0dXJuIHJlcy5zZW5kKGVycik7XG4gICAgICAgICAgICByZXMuc2VuZChyZXN1bHQpXG4gICAgICAgIH0pXG59KVxuXG4vLyBPcGVuaW5nIEFkZCBVc2VyIHBhZ2VcbmFwcC5nZXQoJy9hZGRVc2VyJywocmVxLHJlcykgPT4ge1xuICAgIHJlcy5yZW5kZXIoJ2FkbWluJylcbn0pXG5cbk1vbmdvQ2xpZW50LmNvbm5lY3QobW9uZ291cmwsKGVycixjbGllbnQpID0+IHtcbiAgICBpZihlcnIpIHRocm93IGVycjtcbiAgICBkYiA9IGNsaWVudC5kYignbWFyY2hfZGFzaGJvYXJkJylcbiAgICBhcHAubGlzdGVuKHBvcnQsICgpPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gcG9ydCAke3BvcnR9YClcbiAgICB9KVxufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "MongoClient",
        "bodyParser",
        "port",
        "app",
        "db",
        "mongourl",
        "col_name",
        "use",
        "__dirname",
        "urlencoded",
        "extended",
        "json",
        "set",
        "get",
        "req",
        "res",
        "collection",
        "find",
        "toArray",
        "err",
        "result",
        "render",
        "data",
        "post",
        "insert",
        "body",
        "console",
        "log",
        "redirect",
        "findOneAndDelete",
        "name",
        "send",
        "message",
        "put",
        "findOneAndUpdate",
        "$set",
        "email",
        "phone",
        "upsert",
        "connect",
        "client",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard\\",
      "sourcesContent": [
        "//import express from 'express';\nconst express = require('express');\n\nconst MongoClient = require('mongodb').MongoClient;\n//import bodyParser from 'body-parser';\nconst bodyParser = require('body-parser');\n\nconst port = 8900;\nconst app = express();\nlet db;\nconst mongourl = 'mongodb://127.0.0.1:27017/'\nconst col_name = 'userlist';\n\napp.use(express.static(__dirname+'/public'));\n\napp.use(bodyParser.urlencoded({extended:true}));\napp.use(bodyParser.json());\n//app.use(express.json());\n\napp.set('view engine', 'ejs');\napp.set('views', './views');\n\n// Get Data from datbase and display on index\napp.get('/', (req,res)=>{\n    db.collection(col_name).find().toArray((err,result) => {\n        if(err) throw err;\n        res.render('index.ejs',{data:result})\n    })\n})\n\n// Post data from ui\napp.post('/addData', (req,res) => {\n    db.collection(col_name)\n        // In Req.body we will recive the data\n        // from form.\n        .insert(req.body, (err,result) => {\n            if(err) throw err;\n            console.log('data.inserted');\n        })\n    res.redirect('/');\n})\n   \n// Delete Selected User\napp.delete('/delete_user',(req,res) => {\n    db.collection(col_name).findOneAndDelete({\n        \"name\":req.body.name\n    },(err,result) => {  \n        if (err) return res.send(500,err)\n        res.send({message: 'success'})\n    })\n})\n\n// Find user by name\napp.post('/find_by_name',(req,res) => {\n    let name = req.body.name;\n    db.collection(col_name)\n      .find({name:name})\n      .toArray((err,result) => {\n          if(err) throw err;\n          res.send(result)\n      })\n});\n\n// Update User\napp.put('/update_user',(req,res)=>{\n    db.collection(col_name)\n        .findOneAndUpdate({\"name\":req.body.name},{\n            $set:{\n                name:req.body.name,\n                email:req.body.email,\n                phone:req.body.phone\n            }\n        },{\n            upsert:true\n        },(err,result) => {\n            if(err) return res.send(err);\n            res.send(result)\n        })\n})\n\n// Opening Add User page\napp.get('/addUser',(req,res) => {\n    res.render('admin')\n})\n\nMongoClient.connect(mongourl,(err,client) => {\n    if(err) throw err;\n    db = client.db('march_dashboard')\n    app.listen(port, ()=> {\n        console.log(`Server running on port ${port}`)\n    })\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1620901942332
  }
}