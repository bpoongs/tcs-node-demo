{
  "{\"sourceRoot\":\"C:\\\\Users\\\\archana\\\\Desktop\\\\Node.js\\\\Node.js-Demo\\\\dashboard\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\archana\\\\Desktop\\\\Node.js\\\\Node.js-Demo\\\\dashboard\",\"filename\":\"C:\\\\Users\\\\archana\\\\Desktop\\\\Node.js\\\\Node.js-Demo\\\\dashboard\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\archana\\\\Desktop\\\\Node.js\\\\Node.js-Demo\\\\dashboard\",\"plugins\":[],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard",
      "filename": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard\\app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\n\nconst MongoClient = require('mongodb').MongoClient;\n\nimport bodyParser from 'body-parser';\nconst port = 8900;\nconst app = express();\nlet db;\nconst mongourl = 'mongodb://127.0.0.1:27017/';\nconst col_name = 'userlist';\napp.use(express.static(__dirname + '/public'));\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\napp.set('view engine', 'ejs');\napp.set('views', './views'); // Get Data from datbase and display on index\n\napp.get('/', (req, res) => {\n  db.collection(col_name).find().toArray((err, result) => {\n    if (err) throw err;\n    res.render('index.ejs', {\n      data: result\n    });\n  });\n}); // Post data from ui\n\napp.post('/addData', (req, res) => {\n  db.collection(col_name) // In Req.body we will recive the data\n  // from form.\n  .insert(req.body, (err, result) => {\n    if (err) throw err;\n    console.log('data.inserted');\n  });\n  res.redirect('/');\n}); // Delete Selected User\n\napp.delete('/delete_user', (req, res) => {\n  db.collection(col_name).findOneAndDelete({\n    \"name\": req.body.name\n  }, (err, result) => {\n    if (err) return res.send(500, err);\n    res.send({\n      message: 'success'\n    });\n  });\n}); // Find user by name\n\napp.post('/find_by_name', (req, res) => {\n  let name = req.body.name;\n  db.collection(col_name).find({\n    name: name\n  }).toArray((err, result) => {\n    if (err) throw err;\n    res.send(result);\n  });\n}); // Update User\n\napp.put('/update_user', (req, res) => {\n  db.collection(col_name).findOneAndUpdate({\n    \"name\": req.body.name\n  }, {\n    $set: {\n      name: req.body.name,\n      email: req.body.email,\n      phone: req.body.phone\n    }\n  }, {\n    upsert: true\n  }, (err, result) => {\n    if (err) return res.send(err);\n    res.send(result);\n  });\n}); // Opening Add User page\n\napp.get('/addUser', (req, res) => {\n  res.render('admin');\n});\nMongoClient.connect(mongourl, (err, client) => {\n  if (err) throw err;\n  db = client.db('march_dashboard');\n  app.listen(port, () => {\n    console.log(`Server running on port ${port}`);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiTW9uZ29DbGllbnQiLCJyZXF1aXJlIiwiYm9keVBhcnNlciIsInBvcnQiLCJhcHAiLCJkYiIsIm1vbmdvdXJsIiwiY29sX25hbWUiLCJ1c2UiLCJzdGF0aWMiLCJfX2Rpcm5hbWUiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwic2V0IiwiZ2V0IiwicmVxIiwicmVzIiwiY29sbGVjdGlvbiIsImZpbmQiLCJ0b0FycmF5IiwiZXJyIiwicmVzdWx0IiwicmVuZGVyIiwiZGF0YSIsInBvc3QiLCJpbnNlcnQiLCJib2R5IiwiY29uc29sZSIsImxvZyIsInJlZGlyZWN0IiwiZGVsZXRlIiwiZmluZE9uZUFuZERlbGV0ZSIsIm5hbWUiLCJzZW5kIiwibWVzc2FnZSIsInB1dCIsImZpbmRPbmVBbmRVcGRhdGUiLCIkc2V0IiwiZW1haWwiLCJwaG9uZSIsInVwc2VydCIsImNvbm5lY3QiLCJjbGllbnQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE9BQVAsTUFBb0IsU0FBcEI7O0FBQ0EsTUFBTUMsV0FBVyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CRCxXQUF2Qzs7QUFDQSxPQUFPRSxVQUFQLE1BQXVCLGFBQXZCO0FBQ0EsTUFBTUMsSUFBSSxHQUFHLElBQWI7QUFDQSxNQUFNQyxHQUFHLEdBQUdMLE9BQU8sRUFBbkI7QUFDQSxJQUFJTSxFQUFKO0FBQ0EsTUFBTUMsUUFBUSxHQUFHLDRCQUFqQjtBQUNBLE1BQU1DLFFBQVEsR0FBRyxVQUFqQjtBQUVBSCxHQUFHLENBQUNJLEdBQUosQ0FBUVQsT0FBTyxDQUFDVSxNQUFSLENBQWVDLFNBQVMsR0FBQyxTQUF6QixDQUFSO0FBRUFOLEdBQUcsQ0FBQ0ksR0FBSixDQUFRTixVQUFVLENBQUNTLFVBQVgsQ0FBc0I7QUFBQ0MsRUFBQUEsUUFBUSxFQUFDO0FBQVYsQ0FBdEIsQ0FBUjtBQUNBUixHQUFHLENBQUNJLEdBQUosQ0FB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QUN4QixHQUFHLENBQUNXLElBQUosQ0FBU2E7QUFIZDtBQURnQyxHQUQ3QyxFQU9NO0FBQ0VDLElBQUFBLE1BQU0sRUFBQztBQURULEdBUE4sRUFTTSxDQUFDcEIsR0FBRCxFQUFLQyxNQUFMLEtBQWdCO0FBQ2QsUUFBR0QsR0FBSCxFQUFRLE9BQU9KLEdBQUcsQ0FBQ2lCLElBQUosQ0FBU2IsR0FBVCxDQUFQO0FBQ1JKLElBQUFBLEdBQUcsQ0FBQ2lCLElBQUosQ0FBU1osTUFBVDtBQUNILEdBWkw7QUFhSCxDQWRELEUsQ0FnQkE7O0FBQ0FsQixHQUFHLENBQUNXLEdBQUosQ0FBUSxVQUFSLEVBQW1CLENBQUNDLEdBQUQsRUFBS0MsR0FBTCxLQUFhO0FBQzVCQSxFQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxPQUFYO0FBQ0gsQ0FGRDtBQUlBdkIsV0FBVyxDQUFDMEMsT0FBWixDQUFvQnBDLFFBQXBCLEVBQTZCLENBQUNlLEdBQUQsRUFBS3NCLE1BQUwsS0FBZ0I7QUFDekMsTUFBR3RCLEdBQUgsRUFBUSxNQUFNQSxHQUFOO0FBQ1JoQixFQUFBQSxFQUFFLEdBQUdzQyxNQUFNLENBQUN0QyxFQUFQLENBQVUsaUJBQVYsQ0FBTDtBQUNBRCxFQUFBQSxHQUFHLENBQUN3QyxNQUFKLENBQVd6QyxJQUFYLEVBQWlCLE1BQUs7QUFDbEJ5QixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSwwQkFBeUIxQixJQUFLLEVBQTNDO0FBQ0gsR0FGRDtBQUdILENBTkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhcmNoYW5hXFxEZXNrdG9wXFxOb2RlLmpzXFxOb2RlLmpzLURlbW9cXGRhc2hib2FyZCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuY29uc3QgTW9uZ29DbGllbnQgPSByZXF1aXJlKCdtb25nb2RiJykuTW9uZ29DbGllbnQ7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5jb25zdCBwb3J0ID0gODkwMDtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmxldCBkYjtcbmNvbnN0IG1vbmdvdXJsID0gJ21vbmdvZGI6Ly8xMjcuMC4wLjE6MjcwMTcvJ1xuY29uc3QgY29sX25hbWUgPSAndXNlcmxpc3QnO1xuXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKF9fZGlybmFtZSsnL3B1YmxpYycpKTtcblxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe2V4dGVuZGVkOnRydWV9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuYXBwLnNldCgndmlldyBlbmdpbmUnLCAnZWpzJyk7XG5hcHAuc2V0KCd2aWV3cycsICcuL3ZpZXdzJyk7XG5cbi8vIEdldCBEYXRhIGZyb20gZGF0YmFzZSBhbmQgZGlzcGxheSBvbiBpbmRleFxuYXBwLmdldCgnLycsIChyZXEscmVzKT0+e1xuICAgIGRiLmNvbGxlY3Rpb24oY29sX25hbWUpLmZpbmQoKS50b0FycmF5KChlcnIscmVzdWx0KSA9PiB7XG4gICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICByZXMucmVuZGVyKCdpbmRleC5lanMnLHtkYXRhOnJlc3VsdH0pXG4gICAgfSlcbn0pXG5cbi8vIFBvc3QgZGF0YSBmcm9tIHVpXG5hcHAucG9zdCgnL2FkZERhdGEnLCAocmVxLHJlcykgPT4ge1xuICAgIGRiLmNvbGxlY3Rpb24oY29sX25hbWUpXG4gICAgICAgIC8vIEluIFJlcS5ib2R5IHdlIHdpbGwgcmVjaXZlIHRoZSBkYXRhXG4gICAgICAgIC8vIGZyb20gZm9ybS5cbiAgICAgICAgLmluc2VydChyZXEuYm9keSwgKGVycixyZXN1bHQpID0+IHtcbiAgICAgICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2RhdGEuaW5zZXJ0ZWQnKTtcbiAgICAgICAgfSlcbiAgICByZXMucmVkaXJlY3QoJy8nKTtcbn0pXG5cbi8vIERlbGV0ZSBTZWxlY3RlZCBVc2VyXG5hcHAuZGVsZXRlKCcvZGVsZXRlX3VzZXInLChyZXEscmVzKSA9PiB7XG4gICAgZGIuY29sbGVjdGlvbihjb2xfbmFtZSkuZmluZE9uZUFuZERlbGV0ZSh7XG4gICAgICAgIFwibmFtZVwiOnJlcS5ib2R5Lm5hbWVcbiAgICB9LChlcnIscmVzdWx0KSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHJldHVybiByZXMuc2VuZCg1MDAsZXJyKVxuICAgICAgICByZXMuc2VuZCh7bWVzc2FnZTogJ3N1Y2Nlc3MnfSlcbiAgICB9KVxufSlcblxuLy8gRmluZCB1c2VyIGJ5IG5hbWVcbmFwcC5wb3N0KCcvZmluZF9ieV9uYW1lJywocmVxLHJlcykgPT4ge1xuICAgIGxldCBuYW1lID0gcmVxLmJvZHkubmFtZTtcbiAgICBkYi5jb2xsZWN0aW9uKGNvbF9uYW1lKVxuICAgICAgLmZpbmQoe25hbWU6bmFtZX0pXG4gICAgICAudG9BcnJheSgoZXJyLHJlc3VsdCkgPT4ge1xuICAgICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICAgIHJlcy5zZW5kKHJlc3VsdClcbiAgICAgIH0pXG59KTtcblxuLy8gVXBkYXRlIFVzZXJcbmFwcC5wdXQoJy91cGRhdGVfdXNlcicsKHJlcSxyZXMpPT57XG4gICAgZGIuY29sbGVjdGlvbihjb2xfbmFtZSlcbiAgICAgICAgLmZpbmRPbmVBbmRVcGRhdGUoe1wibmFtZVwiOnJlcS5ib2R5Lm5hbWV9LHtcbiAgICAgICAgICAgICRzZXQ6e1xuICAgICAgICAgICAgICAgIG5hbWU6cmVxLmJvZHkubmFtZSxcbiAgICAgICAgICAgICAgICBlbWFpbDpyZXEuYm9keS5lbWFpbCxcbiAgICAgICAgICAgICAgICBwaG9uZTpyZXEuYm9keS5waG9uZVxuICAgICAgICAgICAgfVxuICAgICAgICB9LHtcbiAgICAgICAgICAgIHVwc2VydDp0cnVlXG4gICAgICAgIH0sKGVycixyZXN1bHQpID0+IHtcbiAgICAgICAgICAgIGlmKGVycikgcmV0dXJuIHJlcy5zZW5kKGVycik7XG4gICAgICAgICAgICByZXMuc2VuZChyZXN1bHQpXG4gICAgICAgIH0pXG59KVxuXG4vLyBPcGVuaW5nIEFkZCBVc2VyIHBhZ2VcbmFwcC5nZXQoJy9hZGRVc2VyJywocmVxLHJlcykgPT4ge1xuICAgIHJlcy5yZW5kZXIoJ2FkbWluJylcbn0pXG5cbk1vbmdvQ2xpZW50LmNvbm5lY3QobW9uZ291cmwsKGVycixjbGllbnQpID0+IHtcbiAgICBpZihlcnIpIHRocm93IGVycjtcbiAgICBkYiA9IGNsaWVudC5kYignbWFyY2hfZGFzaGJvYXJkJylcbiAgICBhcHAubGlzdGVuKHBvcnQsICgpPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gcG9ydCAke3BvcnR9YClcbiAgICB9KVxufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "MongoClient",
        "require",
        "bodyParser",
        "port",
        "app",
        "db",
        "mongourl",
        "col_name",
        "use",
        "static",
        "__dirname",
        "urlencoded",
        "extended",
        "json",
        "set",
        "get",
        "req",
        "res",
        "collection",
        "find",
        "toArray",
        "err",
        "result",
        "render",
        "data",
        "post",
        "insert",
        "body",
        "console",
        "log",
        "redirect",
        "delete",
        "findOneAndDelete",
        "name",
        "send",
        "message",
        "put",
        "findOneAndUpdate",
        "$set",
        "email",
        "phone",
        "upsert",
        "connect",
        "client",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard",
      "sourcesContent": [
        "import express from 'express';\nconst MongoClient = require('mongodb').MongoClient;\nimport bodyParser from 'body-parser';\nconst port = 8900;\nconst app = express();\nlet db;\nconst mongourl = 'mongodb://127.0.0.1:27017/'\nconst col_name = 'userlist';\n\napp.use(express.static(__dirname+'/public'));\n\napp.use(bodyParser.urlencoded({extended:true}));\napp.use(bodyParser.json());\n\napp.set('view engine', 'ejs');\napp.set('views', './views');\n\n// Get Data from datbase and display on index\napp.get('/', (req,res)=>{\n    db.collection(col_name).find().toArray((err,result) => {\n        if(err) throw err;\n        res.render('index.ejs',{data:result})\n    })\n})\n\n// Post data from ui\napp.post('/addData', (req,res) => {\n    db.collection(col_name)\n        // In Req.body we will recive the data\n        // from form.\n        .insert(req.body, (err,result) => {\n            if(err) throw err;\n            console.log('data.inserted');\n        })\n    res.redirect('/');\n})\n\n// Delete Selected User\napp.delete('/delete_user',(req,res) => {\n    db.collection(col_name).findOneAndDelete({\n        \"name\":req.body.name\n    },(err,result) => {\n        if (err) return res.send(500,err)\n        res.send({message: 'success'})\n    })\n})\n\n// Find user by name\napp.post('/find_by_name',(req,res) => {\n    let name = req.body.name;\n    db.collection(col_name)\n      .find({name:name})\n      .toArray((err,result) => {\n          if(err) throw err;\n          res.send(result)\n      })\n});\n\n// Update User\napp.put('/update_user',(req,res)=>{\n    db.collection(col_name)\n        .findOneAndUpdate({\"name\":req.body.name},{\n            $set:{\n                name:req.body.name,\n                email:req.body.email,\n                phone:req.body.phone\n            }\n        },{\n            upsert:true\n        },(err,result) => {\n            if(err) return res.send(err);\n            res.send(result)\n        })\n})\n\n// Opening Add User page\napp.get('/addUser',(req,res) => {\n    res.render('admin')\n})\n\nMongoClient.connect(mongourl,(err,client) => {\n    if(err) throw err;\n    db = client.db('march_dashboard')\n    app.listen(port, ()=> {\n        console.log(`Server running on port ${port}`)\n    })\n})"
      ]
    },
    "sourceType": "module",
    "mtime": 1558247134000
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\archana\\\\Desktop\\\\Node.js\\\\Node.js-Demo\\\\dashboard\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\archana\\\\Desktop\\\\Node.js\\\\Node.js-Demo\\\\dashboard\",\"filename\":\"C:\\\\Users\\\\archana\\\\Desktop\\\\Node.js\\\\Node.js-Demo\\\\dashboard\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\archana\\\\Desktop\\\\Node.js\\\\Node.js-Demo\\\\dashboard\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard",
      "filename": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar MongoClient = require('mongodb').MongoClient;\n\nvar port = 8900;\nvar app = (0, _express[\"default\"])();\nvar db;\nvar mongourl = 'mongodb://127.0.0.1:27017/';\nvar col_name = 'userlist';\napp.use(_express[\"default\"][\"static\"](__dirname + '/public'));\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].json());\napp.set('view engine', 'ejs');\napp.set('views', './views'); // Get Data from datbase and display on index\n\napp.get('/', function (req, res) {\n  db.collection(col_name).find().toArray(function (err, result) {\n    if (err) throw err;\n    res.render('index.ejs', {\n      data: result\n    });\n  });\n}); // Post data from ui\n\napp.post('/addData', function (req, res) {\n  db.collection(col_name) // In Req.body we will recive the data\n  // from form.\n  .insert(req.body, function (err, result) {\n    if (err) throw err;\n    console.log('data.inserted');\n  });\n  res.redirect('/');\n}); // Delete Selected User\n\napp[\"delete\"]('/delete_user', function (req, res) {\n  db.collection(col_name).findOneAndDelete({\n    \"name\": req.body.name\n  }, function (err, result) {\n    if (err) return res.send(500, err);\n    res.send({\n      message: 'success'\n    });\n  });\n}); // Find user by name\n\napp.post('/find_by_name', function (req, res) {\n  var name = req.body.name;\n  db.collection(col_name).find({\n    name: name\n  }).toArray(function (err, result) {\n    if (err) throw err;\n    res.send(result);\n  });\n}); // Update User\n\napp.put('/update_user', function (req, res) {\n  db.collection(col_name).findOneAndUpdate({\n    \"name\": req.body.name\n  }, {\n    $set: {\n      name: req.body.name,\n      email: req.body.email,\n      phone: req.body.phone\n    }\n  }, {\n    upsert: true\n  }, function (err, result) {\n    if (err) return res.send(err);\n    res.send(result);\n  });\n}); // Opening Add User page\n\napp.get('/addUser', function (req, res) {\n  res.render('admin');\n});\nMongoClient.connect(mongourl, function (err, client) {\n  if (err) throw err;\n  db = client.db('march_dashboard');\n  app.listen(port, function () {\n    console.log(\"Server running on port \".concat(port));\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJNb25nb0NsaWVudCIsInJlcXVpcmUiLCJwb3J0IiwiYXBwIiwiZGIiLCJtb25nb3VybCIsImNvbF9uYW1lIiwidXNlIiwiZXhwcmVzcyIsIl9fZGlybmFtZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwic2V0IiwiZ2V0IiwicmVxIiwicmVzIiwiY29sbGVjdGlvbiIsImZpbmQiLCJ0b0FycmF5IiwiZXJyIiwicmVzdWx0IiwicmVuZGVyIiwiZGF0YSIsInBvc3QiLCJpbnNlcnQiLCJib2R5IiwiY29uc29sZSIsImxvZyIsInJlZGlyZWN0IiwiZmluZE9uZUFuZERlbGV0ZSIsIm5hbWUiLCJzZW5kIiwibWVzc2FnZSIsInB1dCIsImZpbmRPbmVBbmRVcGRhdGUiLCIkc2V0IiwiZW1haWwiLCJwaG9uZSIsInVwc2VydCIsImNvbm5lY3QiLCJjbGllbnQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUE7Ozs7QUFEQSxJQUFNQSxXQUFXLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQVAsQ0FBbUJELFdBQXZDOztBQUVBLElBQU1FLElBQUksR0FBRyxJQUFiO0FBQ0EsSUFBTUMsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBSUMsRUFBSjtBQUNBLElBQU1DLFFBQVEsR0FBRyw0QkFBakI7QUFDQSxJQUFNQyxRQUFRLEdBQUcsVUFBakI7QUFFQUgsR0FBRyxDQUFDSSxHQUFKLENBQVFDLDhCQUFlQyxTQUFTLEdBQUMsU0FBekIsQ0FBUjtBQUVBTixHQUFHLENBQUNJLEdBQUosQ0FBUUcsdUJBQVdDLFVBQVgsQ0FBc0I7QUFBQ0MsRUFBQUEsUUFBUSxFQUFDO0FBQVYsQ0FBdEIsQ0FBUjtBQUNBVCxHQUFHLENBQUNJLEdBQUosQ0FBUUcsdUJBQVdHLElBQVgsRUFBUjtBQUVBVixHQUFHLENBQUNXLEdBQUosQ0FBUSxhQUFSLEVBQXVCLEtBQXZCO0FBQ0FYLEdBQUcsQ0FBQ1csR0FB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LEVBQUtDLE1BQUwsRUFBZ0I7QUFDZCxRQUFHRCxHQUFILEVBQVEsT0FBT0osR0FBRyxDQUFDZ0IsSUFBSixDQUFTWixHQUFULENBQVA7QUFDUkosSUFBQUEsR0FBRyxDQUFDZ0IsSUFBSixDQUFTWCxNQUFUO0FBQ0gsR0FaTDtBQWFILENBZEQsRSxDQWdCQTs7QUFDQW5CLEdBQUcsQ0FBQ1ksR0FBSixDQUFRLFVBQVIsRUFBbUIsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDNUJBLEVBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLE9BQVg7QUFDSCxDQUZEO0FBSUF2QixXQUFXLENBQUN5QyxPQUFaLENBQW9CcEMsUUFBcEIsRUFBNkIsVUFBQ2dCLEdBQUQsRUFBS3FCLE1BQUwsRUFBZ0I7QUFDekMsTUFBR3JCLEdBQUgsRUFBUSxNQUFNQSxHQUFOO0FBQ1JqQixFQUFBQSxFQUFFLEdBQUdzQyxNQUFNLENBQUN0QyxFQUFQLENBQVUsaUJBQVYsQ0FBTDtBQUNBRCxFQUFBQSxHQUFHLENBQUN3QyxNQUFKLENBQVd6QyxJQUFYLEVBQWlCLFlBQUs7QUFDbEIwQixJQUFBQSxPQUFPLENBQUNDLEdBQVIsa0NBQXNDM0IsSUFBdEM7QUFDSCxHQUZEO0FBR0gsQ0FORCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFyY2hhbmFcXERlc2t0b3BcXE5vZGUuanNcXE5vZGUuanMtRGVtb1xcZGFzaGJvYXJkIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5jb25zdCBNb25nb0NsaWVudCA9IHJlcXVpcmUoJ21vbmdvZGInKS5Nb25nb0NsaWVudDtcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmNvbnN0IHBvcnQgPSA4OTAwO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xubGV0IGRiO1xuY29uc3QgbW9uZ291cmwgPSAnbW9uZ29kYjovLzEyNy4wLjAuMToyNzAxNy8nXG5jb25zdCBjb2xfbmFtZSA9ICd1c2VybGlzdCc7XG5cbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoX19kaXJuYW1lKycvcHVibGljJykpO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7ZXh0ZW5kZWQ6dHJ1ZX0pKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuXG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdlanMnKTtcbmFwcC5zZXQoJ3ZpZXdzJywgJy4vdmlld3MnKTtcblxuLy8gR2V0IERhdGEgZnJvbSBkYXRiYXNlIGFuZCBkaXNwbGF5IG9uIGluZGV4XG5hcHAuZ2V0KCcvJywgKHJlcSxyZXMpPT57XG4gICAgZGIuY29sbGVjdGlvbihjb2xfbmFtZSkuZmluZCgpLnRvQXJyYXkoKGVycixyZXN1bHQpID0+IHtcbiAgICAgICAgaWYoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgIHJlcy5yZW5kZXIoJ2luZGV4LmVqcycse2RhdGE6cmVzdWx0fSlcbiAgICB9KVxufSlcblxuLy8gUG9zdCBkYXRhIGZyb20gdWlcbmFwcC5wb3N0KCcvYWRkRGF0YScsIChyZXEscmVzKSA9PiB7XG4gICAgZGIuY29sbGVjdGlvbihjb2xfbmFtZSlcbiAgICAgICAgLy8gSW4gUmVxLmJvZHkgd2Ugd2lsbCByZWNpdmUgdGhlIGRhdGFcbiAgICAgICAgLy8gZnJvbSBmb3JtLlxuICAgICAgICAuaW5zZXJ0KHJlcS5ib2R5LCAoZXJyLHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgaWYoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZGF0YS5pbnNlcnRlZCcpO1xuICAgICAgICB9KVxuICAgIHJlcy5yZWRpcmVjdCgnLycpO1xufSlcblxuLy8gRGVsZXRlIFNlbGVjdGVkIFVzZXJcbmFwcC5kZWxldGUoJy9kZWxldGVfdXNlcicsKHJlcSxyZXMpID0+IHtcbiAgICBkYi5jb2xsZWN0aW9uKGNvbF9uYW1lKS5maW5kT25lQW5kRGVsZXRlKHtcbiAgICAgICAgXCJuYW1lXCI6cmVxLmJvZHkubmFtZVxuICAgIH0sKGVycixyZXN1bHQpID0+IHtcbiAgICAgICAgaWYgKGVycikgcmV0dXJuIHJlcy5zZW5kKDUwMCxlcnIpXG4gICAgICAgIHJlcy5zZW5kKHttZXNzYWdlOiAnc3VjY2Vzcyd9KVxuICAgIH0pXG59KVxuXG4vLyBGaW5kIHVzZXIgYnkgbmFtZVxuYXBwLnBvc3QoJy9maW5kX2J5X25hbWUnLChyZXEscmVzKSA9PiB7XG4gICAgbGV0IG5hbWUgPSByZXEuYm9keS5uYW1lO1xuICAgIGRiLmNvbGxlY3Rpb24oY29sX25hbWUpXG4gICAgICAuZmluZCh7bmFtZTpuYW1lfSlcbiAgICAgIC50b0FycmF5KChlcnIscmVzdWx0KSA9PiB7XG4gICAgICAgICAgaWYoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgICAgcmVzLnNlbmQocmVzdWx0KVxuICAgICAgfSlcbn0pO1xuXG4vLyBVcGRhdGUgVXNlclxuYXBwLnB1dCgnL3VwZGF0ZV91c2VyJywocmVxLHJlcyk9PntcbiAgICBkYi5jb2xsZWN0aW9uKGNvbF9uYW1lKVxuICAgICAgICAuZmluZE9uZUFuZFVwZGF0ZSh7XCJuYW1lXCI6cmVxLmJvZHkubmFtZX0se1xuICAgICAgICAgICAgJHNldDp7XG4gICAgICAgICAgICAgICAgbmFtZTpyZXEuYm9keS5uYW1lLFxuICAgICAgICAgICAgICAgIGVtYWlsOnJlcS5ib2R5LmVtYWlsLFxuICAgICAgICAgICAgICAgIHBob25lOnJlcS5ib2R5LnBob25lXG4gICAgICAgICAgICB9XG4gICAgICAgIH0se1xuICAgICAgICAgICAgdXBzZXJ0OnRydWVcbiAgICAgICAgfSwoZXJyLHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgaWYoZXJyKSByZXR1cm4gcmVzLnNlbmQoZXJyKTtcbiAgICAgICAgICAgIHJlcy5zZW5kKHJlc3VsdClcbiAgICAgICAgfSlcbn0pXG5cbi8vIE9wZW5pbmcgQWRkIFVzZXIgcGFnZVxuYXBwLmdldCgnL2FkZFVzZXInLChyZXEscmVzKSA9PiB7XG4gICAgcmVzLnJlbmRlcignYWRtaW4nKVxufSlcblxuTW9uZ29DbGllbnQuY29ubmVjdChtb25nb3VybCwoZXJyLGNsaWVudCkgPT4ge1xuICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgIGRiID0gY2xpZW50LmRiKCdtYXJjaF9kYXNoYm9hcmQnKVxuICAgIGFwcC5saXN0ZW4ocG9ydCwgKCk9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBTZXJ2ZXIgcnVubmluZyBvbiBwb3J0ICR7cG9ydH1gKVxuICAgIH0pXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "MongoClient",
        "require",
        "port",
        "app",
        "db",
        "mongourl",
        "col_name",
        "use",
        "express",
        "__dirname",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "set",
        "get",
        "req",
        "res",
        "collection",
        "find",
        "toArray",
        "err",
        "result",
        "render",
        "data",
        "post",
        "insert",
        "body",
        "console",
        "log",
        "redirect",
        "findOneAndDelete",
        "name",
        "send",
        "message",
        "put",
        "findOneAndUpdate",
        "$set",
        "email",
        "phone",
        "upsert",
        "connect",
        "client",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\archana\\Desktop\\Node.js\\Node.js-Demo\\dashboard",
      "sourcesContent": [
        "import express from 'express';\nconst MongoClient = require('mongodb').MongoClient;\nimport bodyParser from 'body-parser';\nconst port = 8900;\nconst app = express();\nlet db;\nconst mongourl = 'mongodb://127.0.0.1:27017/'\nconst col_name = 'userlist';\n\napp.use(express.static(__dirname+'/public'));\n\napp.use(bodyParser.urlencoded({extended:true}));\napp.use(bodyParser.json());\n\napp.set('view engine', 'ejs');\napp.set('views', './views');\n\n// Get Data from datbase and display on index\napp.get('/', (req,res)=>{\n    db.collection(col_name).find().toArray((err,result) => {\n        if(err) throw err;\n        res.render('index.ejs',{data:result})\n    })\n})\n\n// Post data from ui\napp.post('/addData', (req,res) => {\n    db.collection(col_name)\n        // In Req.body we will recive the data\n        // from form.\n        .insert(req.body, (err,result) => {\n            if(err) throw err;\n            console.log('data.inserted');\n        })\n    res.redirect('/');\n})\n\n// Delete Selected User\napp.delete('/delete_user',(req,res) => {\n    db.collection(col_name).findOneAndDelete({\n        \"name\":req.body.name\n    },(err,result) => {\n        if (err) return res.send(500,err)\n        res.send({message: 'success'})\n    })\n})\n\n// Find user by name\napp.post('/find_by_name',(req,res) => {\n    let name = req.body.name;\n    db.collection(col_name)\n      .find({name:name})\n      .toArray((err,result) => {\n          if(err) throw err;\n          res.send(result)\n      })\n});\n\n// Update User\napp.put('/update_user',(req,res)=>{\n    db.collection(col_name)\n        .findOneAndUpdate({\"name\":req.body.name},{\n            $set:{\n                name:req.body.name,\n                email:req.body.email,\n                phone:req.body.phone\n            }\n        },{\n            upsert:true\n        },(err,result) => {\n            if(err) return res.send(err);\n            res.send(result)\n        })\n})\n\n// Opening Add User page\napp.get('/addUser',(req,res) => {\n    res.render('admin')\n})\n\nMongoClient.connect(mongourl,(err,client) => {\n    if(err) throw err;\n    db = client.db('march_dashboard')\n    app.listen(port, ()=> {\n        console.log(`Server running on port ${port}`)\n    })\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1558247134000
  },
  "{\"sourceRoot\":\"D:\\\\node-tcs-programs\\\\EjsDashboardDemo\\\\dashboard\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\node-tcs-programs\\\\EjsDashboardDemo\\\\dashboard\",\"filename\":\"D:\\\\node-tcs-programs\\\\EjsDashboardDemo\\\\dashboard\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\node-tcs-programs\\\\EjsDashboardDemo\\\\dashboard\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard",
      "filename": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n//import express from 'express';\nvar express = require('express');\n\nvar MongoClient = require('mongodb').MongoClient; //import bodyParser from 'body-parser';\n//const bodyParser = require('body-parser');\n\n\nvar port = 8900;\nvar app = express();\nvar db;\nvar mongourl = 'mongodb://127.0.0.1:27017/';\nvar col_name = 'userlist';\napp.use(express[\"static\"](__dirname + '/public')); //app.use(bodyParser.urlencoded({extended:true}));\n//app.use(bodyParser.json());\n\napp.use(express.json());\napp.set('view engine', 'ejs');\napp.set('views', './views'); // Get Data from datbase and display on index\n\napp.get('/', function (req, res) {\n  db.collection(col_name).find().toArray(function (err, result) {\n    if (err) throw err;\n    res.render('index.ejs', {\n      data: result\n    });\n  });\n}); // Post data from ui\n\napp.post('/addData', function (req, res) {\n  db.collection(col_name) // In Req.body we will recive the data\n  // from form.\n  .insert(req.body, function (err, result) {\n    if (err) throw err;\n    console.log('data.inserted');\n  });\n  res.redirect('/');\n}); // Delete Selected User\n\napp[\"delete\"]('/delete_user', function (req, res) {\n  db.collection(col_name).findOneAndDelete({\n    \"name\": req.body.name\n  }, function (err, result) {\n    if (err) return res.send(500, err);\n    res.send({\n      message: 'success'\n    });\n  });\n}); // Find user by name\n\napp.post('/find_by_name', function (req, res) {\n  var name = req.body.name;\n  db.collection(col_name).find({\n    name: name\n  }).toArray(function (err, result) {\n    if (err) throw err;\n    res.send(result);\n  });\n}); // Update User\n\napp.put('/update_user', function (req, res) {\n  db.collection(col_name).findOneAndUpdate({\n    \"name\": req.body.name\n  }, {\n    $set: {\n      name: req.body.name,\n      email: req.body.email,\n      phone: req.body.phone\n    }\n  }, {\n    upsert: true\n  }, function (err, result) {\n    if (err) return res.send(err);\n    res.send(result);\n  });\n}); // Opening Add User page\n\napp.get('/addUser', function (req, res) {\n  res.render('admin');\n});\nMongoClient.connect(mongourl, function (err, client) {\n  if (err) throw err;\n  db = client.db('march_dashboard');\n  app.listen(port, function () {\n    console.log(\"Server running on port \".concat(port));\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIk1vbmdvQ2xpZW50IiwicG9ydCIsImFwcCIsImRiIiwibW9uZ291cmwiLCJjb2xfbmFtZSIsInVzZSIsIl9fZGlybmFtZSIsImpzb24iLCJzZXQiLCJnZXQiLCJyZXEiLCJyZXMiLCJjb2xsZWN0aW9uIiwiZmluZCIsInRvQXJyYXkiLCJlcnIiLCJyZXN1bHQiLCJyZW5kZXIiLCJkYXRhIiwicG9zdCIsImluc2VydCIsImJvZHkiLCJjb25zb2xlIiwibG9nIiwicmVkaXJlY3QiLCJmaW5kT25lQW5kRGVsZXRlIiwibmFtZSIsInNlbmQiLCJtZXNzYWdlIiwicHV0IiwiZmluZE9uZUFuZFVwZGF0ZSIsIiRzZXQiLCJlbWFpbCIsInBob25lIiwidXBzZXJ0IiwiY29ubmVjdCIsImNsaWVudCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBRUEsSUFBTUMsV0FBVyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CQyxXQUF2QyxDLENBQ0E7QUFDQTs7O0FBRUEsSUFBTUMsSUFBSSxHQUFHLElBQWI7QUFDQSxJQUFNQyxHQUFHLEdBQUdKLE9BQU8sRUFBbkI7QUFDQSxJQUFJSyxFQUFKO0FBQ0EsSUFBTUMsUUFBUSxHQUFHLDRCQUFqQjtBQUNBLElBQU1DLFFBQVEsR0FBRyxVQUFqQjtBQUVBSCxHQUFHLENBQUNJLEdBQUosQ0FBUVIsT0FBTyxVQUFQLENBQWVTLFNBQVMsR0FBQyxTQUF6QixDQUFSLEUsQ0FFQTtBQUNBOztBQUNBTCxHQUFHLENBQUNJLEdBQUosQ0FBUVIsT0FBTyxDQUFDVSxJQUFSLEVBQVI7QUFFQU4sR0FBRyxDQUFDTyxHQUFKLENBQVEsYUFBUixFQUF1QixLQUF2QjtBQUNBUCxHQUFHLENBQUNPLEdBQUosQ0FBUSxPQUFSLEVBQWlCLFNBQWpCLEUsQ0FFQTs7QUFDQVAsR0FB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SixHQUFHLENBQUNnQixJQUFKLENBQVNaLEdBQVQsQ0FBUDtBQUNSSixJQUFBQSxHQUFHLENBQUNnQixJQUFKLENBQVNYLE1BQVQ7QUFDSCxHQVpMO0FBYUgsQ0FkRCxFLENBZ0JBOztBQUNBZixHQUFHLENBQUNRLEdBQUosQ0FBUSxVQUFSLEVBQW1CLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFhO0FBQzVCQSxFQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxPQUFYO0FBQ0gsQ0FGRDtBQUlBbEIsV0FBVyxDQUFDb0MsT0FBWixDQUFvQmhDLFFBQXBCLEVBQTZCLFVBQUNZLEdBQUQsRUFBS3FCLE1BQUwsRUFBZ0I7QUFDekMsTUFBR3JCLEdBQUgsRUFBUSxNQUFNQSxHQUFOO0FBQ1JiLEVBQUFBLEVBQUUsR0FBR2tDLE1BQU0sQ0FBQ2xDLEVBQVAsQ0FBVSxpQkFBVixDQUFMO0FBQ0FELEVBQUFBLEdBQUcsQ0FBQ29DLE1BQUosQ0FBV3JDLElBQVgsRUFBaUIsWUFBSztBQUNsQnNCLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixrQ0FBc0N2QixJQUF0QztBQUNILEdBRkQ7QUFHSCxDQU5EIiwic291cmNlUm9vdCI6IkQ6XFxub2RlLXRjcy1wcm9ncmFtc1xcRWpzRGFzaGJvYXJkRGVtb1xcZGFzaGJvYXJkIiwic291cmNlc0NvbnRlbnQiOlsiLy9pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5cbmNvbnN0IE1vbmdvQ2xpZW50ID0gcmVxdWlyZSgnbW9uZ29kYicpLk1vbmdvQ2xpZW50O1xuLy9pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG4vL2NvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuXG5jb25zdCBwb3J0ID0gODkwMDtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmxldCBkYjtcbmNvbnN0IG1vbmdvdXJsID0gJ21vbmdvZGI6Ly8xMjcuMC4wLjE6MjcwMTcvJ1xuY29uc3QgY29sX25hbWUgPSAndXNlcmxpc3QnO1xuXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKF9fZGlybmFtZSsnL3B1YmxpYycpKTtcblxuLy9hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7ZXh0ZW5kZWQ6dHJ1ZX0pKTtcbi8vYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcblxuYXBwLnNldCgndmlldyBlbmdpbmUnLCAnZWpzJyk7XG5hcHAuc2V0KCd2aWV3cycsICcuL3ZpZXdzJyk7XG5cbi8vIEdldCBEYXRhIGZyb20gZGF0YmFzZSBhbmQgZGlzcGxheSBvbiBpbmRleFxuYXBwLmdldCgnLycsIChyZXEscmVzKT0+e1xuICAgIGRiLmNvbGxlY3Rpb24oY29sX25hbWUpLmZpbmQoKS50b0FycmF5KChlcnIscmVzdWx0KSA9PiB7XG4gICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICByZXMucmVuZGVyKCdpbmRleC5lanMnLHtkYXRhOnJlc3VsdH0pXG4gICAgfSlcbn0pXG5cbi8vIFBvc3QgZGF0YSBmcm9tIHVpXG5hcHAucG9zdCgnL2FkZERhdGEnLCAocmVxLHJlcykgPT4ge1xuICAgIGRiLmNvbGxlY3Rpb24oY29sX25hbWUpXG4gICAgICAgIC8vIEluIFJlcS5ib2R5IHdlIHdpbGwgcmVjaXZlIHRoZSBkYXRhXG4gICAgICAgIC8vIGZyb20gZm9ybS5cbiAgICAgICAgLmluc2VydChyZXEuYm9keSwgKGVycixyZXN1bHQpID0+IHtcbiAgICAgICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2RhdGEuaW5zZXJ0ZWQnKTtcbiAgICAgICAgfSlcbiAgICByZXMucmVkaXJlY3QoJy8nKTtcbn0pXG5cbi8vIERlbGV0ZSBTZWxlY3RlZCBVc2VyXG5hcHAuZGVsZXRlKCcvZGVsZXRlX3VzZXInLChyZXEscmVzKSA9PiB7XG4gICAgZGIuY29sbGVjdGlvbihjb2xfbmFtZSkuZmluZE9uZUFuZERlbGV0ZSh7XG4gICAgICAgIFwibmFtZVwiOnJlcS5ib2R5Lm5hbWVcbiAgICB9LChlcnIscmVzdWx0KSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHJldHVybiByZXMuc2VuZCg1MDAsZXJyKVxuICAgICAgICByZXMuc2VuZCh7bWVzc2FnZTogJ3N1Y2Nlc3MnfSlcbiAgICB9KVxufSlcblxuLy8gRmluZCB1c2VyIGJ5IG5hbWVcbmFwcC5wb3N0KCcvZmluZF9ieV9uYW1lJywocmVxLHJlcykgPT4ge1xuICAgIGxldCBuYW1lID0gcmVxLmJvZHkubmFtZTtcbiAgICBkYi5jb2xsZWN0aW9uKGNvbF9uYW1lKVxuICAgICAgLmZpbmQoe25hbWU6bmFtZX0pXG4gICAgICAudG9BcnJheSgoZXJyLHJlc3VsdCkgPT4ge1xuICAgICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICAgIHJlcy5zZW5kKHJlc3VsdClcbiAgICAgIH0pXG59KTtcblxuLy8gVXBkYXRlIFVzZXJcbmFwcC5wdXQoJy91cGRhdGVfdXNlcicsKHJlcSxyZXMpPT57XG4gICAgZGIuY29sbGVjdGlvbihjb2xfbmFtZSlcbiAgICAgICAgLmZpbmRPbmVBbmRVcGRhdGUoe1wibmFtZVwiOnJlcS5ib2R5Lm5hbWV9LHtcbiAgICAgICAgICAgICRzZXQ6e1xuICAgICAgICAgICAgICAgIG5hbWU6cmVxLmJvZHkubmFtZSxcbiAgICAgICAgICAgICAgICBlbWFpbDpyZXEuYm9keS5lbWFpbCxcbiAgICAgICAgICAgICAgICBwaG9uZTpyZXEuYm9keS5waG9uZVxuICAgICAgICAgICAgfVxuICAgICAgICB9LHtcbiAgICAgICAgICAgIHVwc2VydDp0cnVlXG4gICAgICAgIH0sKGVycixyZXN1bHQpID0+IHtcbiAgICAgICAgICAgIGlmKGVycikgcmV0dXJuIHJlcy5zZW5kKGVycik7XG4gICAgICAgICAgICByZXMuc2VuZChyZXN1bHQpXG4gICAgICAgIH0pXG59KVxuXG4vLyBPcGVuaW5nIEFkZCBVc2VyIHBhZ2VcbmFwcC5nZXQoJy9hZGRVc2VyJywocmVxLHJlcykgPT4ge1xuICAgIHJlcy5yZW5kZXIoJ2FkbWluJylcbn0pXG5cbk1vbmdvQ2xpZW50LmNvbm5lY3QobW9uZ291cmwsKGVycixjbGllbnQpID0+IHtcbiAgICBpZihlcnIpIHRocm93IGVycjtcbiAgICBkYiA9IGNsaWVudC5kYignbWFyY2hfZGFzaGJvYXJkJylcbiAgICBhcHAubGlzdGVuKHBvcnQsICgpPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gcG9ydCAke3BvcnR9YClcbiAgICB9KVxufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "MongoClient",
        "port",
        "app",
        "db",
        "mongourl",
        "col_name",
        "use",
        "__dirname",
        "json",
        "set",
        "get",
        "req",
        "res",
        "collection",
        "find",
        "toArray",
        "err",
        "result",
        "render",
        "data",
        "post",
        "insert",
        "body",
        "console",
        "log",
        "redirect",
        "findOneAndDelete",
        "name",
        "send",
        "message",
        "put",
        "findOneAndUpdate",
        "$set",
        "email",
        "phone",
        "upsert",
        "connect",
        "client",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\node-tcs-programs\\EjsDashboardDemo\\dashboard",
      "sourcesContent": [
        "//import express from 'express';\nconst express = require('express');\n\nconst MongoClient = require('mongodb').MongoClient;\n//import bodyParser from 'body-parser';\n//const bodyParser = require('body-parser');\n\nconst port = 8900;\nconst app = express();\nlet db;\nconst mongourl = 'mongodb://127.0.0.1:27017/'\nconst col_name = 'userlist';\n\napp.use(express.static(__dirname+'/public'));\n\n//app.use(bodyParser.urlencoded({extended:true}));\n//app.use(bodyParser.json());\napp.use(express.json());\n\napp.set('view engine', 'ejs');\napp.set('views', './views');\n\n// Get Data from datbase and display on index\napp.get('/', (req,res)=>{\n    db.collection(col_name).find().toArray((err,result) => {\n        if(err) throw err;\n        res.render('index.ejs',{data:result})\n    })\n})\n\n// Post data from ui\napp.post('/addData', (req,res) => {\n    db.collection(col_name)\n        // In Req.body we will recive the data\n        // from form.\n        .insert(req.body, (err,result) => {\n            if(err) throw err;\n            console.log('data.inserted');\n        })\n    res.redirect('/');\n})\n\n// Delete Selected User\napp.delete('/delete_user',(req,res) => {\n    db.collection(col_name).findOneAndDelete({\n        \"name\":req.body.name\n    },(err,result) => {\n        if (err) return res.send(500,err)\n        res.send({message: 'success'})\n    })\n})\n\n// Find user by name\napp.post('/find_by_name',(req,res) => {\n    let name = req.body.name;\n    db.collection(col_name)\n      .find({name:name})\n      .toArray((err,result) => {\n          if(err) throw err;\n          res.send(result)\n      })\n});\n\n// Update User\napp.put('/update_user',(req,res)=>{\n    db.collection(col_name)\n        .findOneAndUpdate({\"name\":req.body.name},{\n            $set:{\n                name:req.body.name,\n                email:req.body.email,\n                phone:req.body.phone\n            }\n        },{\n            upsert:true\n        },(err,result) => {\n            if(err) return res.send(err);\n            res.send(result)\n        })\n})\n\n// Opening Add User page\napp.get('/addUser',(req,res) => {\n    res.render('admin')\n})\n\nMongoClient.connect(mongourl,(err,client) => {\n    if(err) throw err;\n    db = client.db('march_dashboard')\n    app.listen(port, ()=> {\n        console.log(`Server running on port ${port}`)\n    })\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1620900391821
  }
}