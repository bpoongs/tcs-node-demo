{
  "{\"sourceRoot\":\"D:\\\\node-programs\\\\node-socket-demo\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\node-programs\\\\node-socket-demo\",\"filename\":\"D:\\\\node-programs\\\\node-socket-demo\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\node-programs\\\\node-socket-demo\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\node-programs\\node-socket-demo",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\node-programs\\node-socket-demo",
      "filename": "D:\\node-programs\\node-socket-demo\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\node-programs\\node-socket-demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\node-programs\\node-socket-demo\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\node-programs\\node-socket-demo\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\node-programs\\node-socket-demo",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar LocalStorage = require('node-localstorage').LocalStorage;\n\nvar localStorage = new LocalStorage('./scratch');\n\nvar iplocate = require(\"node-iplocate\");\n\nvar publicIp = require('public-ip');\n\nvar io = require('socket.io');\n\nvar app = (0, _express[\"default\"])(); // Add configure for ui and port\n\napp.configure(function () {\n  app.set('port', process.env.PORT || 3000);\n  app.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, 'public')));\n});\napp.configure('development', function () {\n  app.use(_express[\"default\"].errorHandler());\n}); // Set up express\n\nvar server = _http[\"default\"].createServer(app).listen(app.get('port'), function () {\n  console.log(\"Express server listening on port \" + app.get('port'));\n}); // Set up socket.io\n\n\nio = require('socket.io').listen(server); // Handle socket traffic\n\nio.sockets.on('connection', function (socket) {\n  var list = io.sockets.sockets;\n  var users = Object.keys(list); // Set the nickname property for a given client\n\n  socket.on('nick', function (nick) {\n    socket.set('nickname', nick);\n    socket.emit('userlist', users);\n  }); // Relay chat data to all clients\n\n  socket.on('chat', function (data) {\n    socket.get('nickname', function (err, nick) {\n      publicIp.v4().then(function (ip) {\n        iplocate(ip).then(function (results) {\n          var respo = JSON.stringify(results.city, null, 2);\n          localStorage.setItem('userlocal', respo);\n        });\n      });\n      var nickname = err ? 'Anonymous' : nick;\n      var payload = {\n        message: data.message,\n        nick: nickname,\n        location: localStorage.getItem('userlocal')\n      };\n      socket.emit('chat', payload);\n      socket.broadcast.emit('chat', payload);\n    });\n  });\n});\n/*\nUse of Radium for Media Queries\n*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJMb2NhbFN0b3JhZ2UiLCJyZXF1aXJlIiwibG9jYWxTdG9yYWdlIiwiaXBsb2NhdGUiLCJwdWJsaWNJcCIsImlvIiwiYXBwIiwiY29uZmlndXJlIiwic2V0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJ1c2UiLCJleHByZXNzIiwicGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJlcnJvckhhbmRsZXIiLCJzZXJ2ZXIiLCJodHRwIiwiY3JlYXRlU2VydmVyIiwibGlzdGVuIiwiZ2V0IiwiY29uc29sZSIsImxvZyIsInNvY2tldHMiLCJvbiIsInNvY2tldCIsImxpc3QiLCJ1c2VycyIsIk9iamVjdCIsImtleXMiLCJuaWNrIiwiZW1pdCIsImRhdGEiLCJlcnIiLCJ2NCIsInRoZW4iLCJpcCIsInJlc3VsdHMiLCJyZXNwbyIsIkpTT04iLCJzdHJpbmdpZnkiLCJjaXR5Iiwic2V0SXRlbSIsIm5pY2tuYW1lIiwicGF5bG9hZCIsIm1lc3NhZ2UiLCJsb2NhdGlvbiIsImdldEl0ZW0iLCJicm9hZGNhc3QiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxZQUFZLEdBQUdDLE9BQU8sQ0FBQyxtQkFBRCxDQUFQLENBQTZCRCxZQUFsRDs7QUFDQSxJQUFJRSxZQUFZLEdBQUcsSUFBSUYsWUFBSixDQUFpQixXQUFqQixDQUFuQjs7QUFDQSxJQUFNRyxRQUFRLEdBQUdGLE9BQU8sQ0FBQyxlQUFELENBQXhCOztBQUNBLElBQU1HLFFBQVEsR0FBR0gsT0FBTyxDQUFDLFdBQUQsQ0FBeEI7O0FBQ0EsSUFBSUksRUFBRSxHQUFHSixPQUFPLENBQUMsV0FBRCxDQUFoQjs7QUFDQSxJQUFJSyxHQUFHLEdBQUcsMEJBQVYsQyxDQUdBOztBQUNBQSxHQUFHLENBQUNDLFNBQUosQ0FBYyxZQUFNO0FBQ2hCRCxFQUFBQSxHQUFHLENBQUNFLEdBQUosQ0FBUSxNQUFSLEVBQWdCQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFwQztBQUNBTCxFQUFBQSxHQUFHLENBQUNNLEdBQUosQ0FBUUMsOEJBQWVDLGlCQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsUUFBckIsQ0FBZixDQUFSO0FBQ0gsQ0FIRDtBQUtBVixHQUFHLENBQUNDLFNBQUosQ0FBYyxhQUFkLEVBQTZCLFlBQU07QUFDL0JELEVBQUFBLEdBQUcsQ0FBQ00sR0FBSixDQUFRQyxvQkFBUUksWUFBUixFQUFSO0FBQ0gsQ0FGRCxFLENBSUE7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHQyxpQkFBS0MsWUFBTCxDQUFrQmQsR0FBbEIsRUFBdUJlLE1BQXZCLENBQThCZixHQUFHLENBQUNnQixHQUFKLENBQVEsTUFBUixDQUE5QixFQUErQyxZQUFVO0FBQ2xFQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQ0FBc0NsQixHQUFHLENBQUNnQixHQUFKLENBQVEsTUFBUixDQUFsRDtBQUNILENBRlksQ0FBYixDLENBSUE7OztBQUNBakIsRUFBRSxHQUFHSixPQUFPLENBQUMsV0FBRCxDQUFQLENBQXFCb0IsTUFBckIsQ0FBNEJILE1BQTVCLENBQUwsQyxDQUdBOztBQUNBYixFQUFFLENBQUNvQixPQUFILENBQVdDLEVBQVgsQ0FBYyxZQUFkLEVBQTZCLFVBQUNDLE1BQUQsRUFBWTtBQUVyQyxNQUFJQyxJQUFJLEdBQUd2QixFQUFFLENBQUNvQixPQUFILENBQVdBLE9BQXRCO0FBQ0EsTUFBSUksS0FBSyxHQUFHQyxNQUFNLENBQUNDLElBQVAsQ0FBWUgsSUFBWixDQUFaLENBSHFDLENBT3JDOztBQUNBRCxFQUFBQSxNQUFNLENBQUNELEVBQVAsQ0FBVSxNQUFWLEVBQWtCLFVBQUNNLElBQUQsRUFBVTtBQUN4QkwsSUFBQUEsTUFBTSxDQUFDbkIsR0FBUCxDQUFXLFVBQVgsRUFBdUJ3QixJQUF2QjtBQUNBTCxJQUFBQSxNQUFNLENBQUNNLElBQVAsQ0FBWSxVQUFaLEVBQXdCSixLQUF4QjtBQUNILEdBSEQsRUFScUMsQ0FlckM7O0FBQ0FGLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLE1BQVYsRUFBa0IsVUFBQ1EsSUFBRCxFQUFVO0FBQ3hCUCxJQUFBQSxNQUFNLENBQUNMLEdBQVAsQ0FBVyxVQUFYLEVBQXVCLFVBQUNhLEdBQUQsRUFBTUgsSUFBTixFQUFlO0FBQ2xDNUIsTUFBQUEsUUFBUSxDQUFDZ0MsRUFBVCxHQUFjQyxJQUFkLENBQW1CLFVBQUFDLEVBQUUsRUFBSTtBQUNyQm5DLFFBQUFBLFFBQVEsQ0FBQ21DLEVBQUQsQ0FBUixDQUFhRCxJQUFiLENBQWtCLFVBQVNFLE9BQVQsRUFBa0I7QUFDaEMsY0FBSUMsS0FBSyxHQUFHQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUgsT0FBTyxDQUFDSSxJQUF2QixFQUE2QixJQUE3QixFQUFtQyxDQUFuQyxDQUFaO0FBQ0F6QyxVQUFBQSxZQUFZLENBQUMwQyxPQUFiLENBQXFCLFdBQXJCLEVBQWlDSixLQUFqQztBQUNKLFNBSEE7QUFJSCxPQUxEO0FBT0EsVUFBSUssUUFBUSxHQUFHVixHQUFHLEdBQUcsV0FBSCxHQUFpQkgsSUFBbkM7QUFFQSxVQUFJYyxPQUFPLEdBQUc7QUFDVkMsUUFBQUEsT0FBTyxFQUFFYixJQUFJLENBQUNhLE9BREo7QUFFVmYsUUFBQUEsSUFBSSxFQUFFYSxRQUZJO0FBR1ZHLFFBQUFBLFFBQVEsRUFBQzlDLFlBQVksQ0FBQytDLE9BQWIsQ0FBcUIsV0FBckI7QUFIQyxPQUFkO0FBTUF0QixNQUFBQSxNQUFNLENBQUNNLElBQVAsQ0FBWSxNQUFaLEVBQW1CYSxPQUFuQjtBQUNBbkIsTUFBQUEsTUFBTSxDQUFDdUIsU0FBUCxDQUFpQmpCLElBQWpCLENBQXNCLE1BQXRCLEVBQThCYSxPQUE5QjtBQUNILEtBbEJEO0FBbUJILEdBcEJEO0FBcUJILENBckNEO0FBd0NBIiwic291cmNlUm9vdCI6IkQ6XFxub2RlLXByb2dyYW1zXFxub2RlLXNvY2tldC1kZW1vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBodHRwIGZyb20gJ2h0dHAnO1xuXG5jb25zdCBMb2NhbFN0b3JhZ2UgPSByZXF1aXJlKCdub2RlLWxvY2Fsc3RvcmFnZScpLkxvY2FsU3RvcmFnZTtcbmxldCBsb2NhbFN0b3JhZ2UgPSBuZXcgTG9jYWxTdG9yYWdlKCcuL3NjcmF0Y2gnKTtcbmNvbnN0IGlwbG9jYXRlID0gcmVxdWlyZShcIm5vZGUtaXBsb2NhdGVcIik7XG5jb25zdCBwdWJsaWNJcCA9IHJlcXVpcmUoJ3B1YmxpYy1pcCcpO1xubGV0IGlvID0gcmVxdWlyZSgnc29ja2V0LmlvJyk7XG5sZXQgYXBwID0gZXhwcmVzcygpO1xuXG5cbi8vIEFkZCBjb25maWd1cmUgZm9yIHVpIGFuZCBwb3J0XG5hcHAuY29uZmlndXJlKCgpID0+IHtcbiAgICBhcHAuc2V0KCdwb3J0JywgcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwKTtcbiAgICBhcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnKSkpO1xufSk7XG5cbmFwcC5jb25maWd1cmUoJ2RldmVsb3BtZW50JywgKCkgPT4ge1xuICAgIGFwcC51c2UoZXhwcmVzcy5lcnJvckhhbmRsZXIoKSk7XG59KTtcblxuLy8gU2V0IHVwIGV4cHJlc3NcbmxldCBzZXJ2ZXIgPSBodHRwLmNyZWF0ZVNlcnZlcihhcHApLmxpc3RlbihhcHAuZ2V0KCdwb3J0JyksIGZ1bmN0aW9uKCl7XG4gICAgY29uc29sZS5sb2coXCJFeHByZXNzIHNlcnZlciBsaXN0ZW5pbmcgb24gcG9ydCBcIiArIGFwcC5nZXQoJ3BvcnQnKSk7XG59KTtcblxuLy8gU2V0IHVwIHNvY2tldC5pb1xuaW8gPSByZXF1aXJlKCdzb2NrZXQuaW8nKS5saXN0ZW4oc2VydmVyKTtcblxuXG4vLyBIYW5kbGUgc29ja2V0IHRyYWZmaWNcbmlvLnNvY2tldHMub24oJ2Nvbm5lY3Rpb24nLCAgKHNvY2tldCkgPT4ge1xuXG4gICAgdmFyIGxpc3QgPSBpby5zb2NrZXRzLnNvY2tldHM7XG4gICAgdmFyIHVzZXJzID0gT2JqZWN0LmtleXMobGlzdCk7XG4gICBcblxuXG4gICAgLy8gU2V0IHRoZSBuaWNrbmFtZSBwcm9wZXJ0eSBmb3IgYSBnaXZlbiBjbGllbnRcbiAgICBzb2NrZXQub24oJ25pY2snLCAobmljaykgPT4ge1xuICAgICAgICBzb2NrZXQuc2V0KCduaWNrbmFtZScsIG5pY2spO1xuICAgICAgICBzb2NrZXQuZW1pdCgndXNlcmxpc3QnLCB1c2Vycyk7XG4gICAgfSk7XG5cbiAgIFxuXG4gICAgLy8gUmVsYXkgY2hhdCBkYXRhIHRvIGFsbCBjbGllbnRzXG4gICAgc29ja2V0Lm9uKCdjaGF0JywgKGRhdGEpID0+IHtcbiAgICAgICAgc29ja2V0LmdldCgnbmlja25hbWUnLCAoZXJyLCBuaWNrKSA9PiB7XG4gICAgICAgICAgICBwdWJsaWNJcC52NCgpLnRoZW4oaXAgPT4ge1xuICAgICAgICAgICAgICAgIGlwbG9jYXRlKGlwKS50aGVuKGZ1bmN0aW9uKHJlc3VsdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJlc3BvID0gSlNPTi5zdHJpbmdpZnkocmVzdWx0cy5jaXR5LCBudWxsLCAyKVxuICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlcmxvY2FsJyxyZXNwbylcbiAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGxldCBuaWNrbmFtZSA9IGVyciA/ICdBbm9ueW1vdXMnIDogbmljaztcblxuICAgICAgICAgICAgbGV0IHBheWxvYWQgPSB7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZGF0YS5tZXNzYWdlLFxuICAgICAgICAgICAgICAgIG5pY2s6IG5pY2tuYW1lLFxuICAgICAgICAgICAgICAgIGxvY2F0aW9uOmxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VybG9jYWwnKVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgc29ja2V0LmVtaXQoJ2NoYXQnLHBheWxvYWQpO1xuICAgICAgICAgICAgc29ja2V0LmJyb2FkY2FzdC5lbWl0KCdjaGF0JywgcGF5bG9hZCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSk7XG5cblxuLypcblVzZSBvZiBSYWRpdW0gZm9yIE1lZGlhIFF1ZXJpZXNcbiovIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "LocalStorage",
        "require",
        "localStorage",
        "iplocate",
        "publicIp",
        "io",
        "app",
        "configure",
        "set",
        "process",
        "env",
        "PORT",
        "use",
        "express",
        "path",
        "join",
        "__dirname",
        "errorHandler",
        "server",
        "http",
        "createServer",
        "listen",
        "get",
        "console",
        "log",
        "sockets",
        "on",
        "socket",
        "list",
        "users",
        "Object",
        "keys",
        "nick",
        "emit",
        "data",
        "err",
        "v4",
        "then",
        "ip",
        "results",
        "respo",
        "JSON",
        "stringify",
        "city",
        "setItem",
        "nickname",
        "payload",
        "message",
        "location",
        "getItem",
        "broadcast"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\node-programs\\node-socket-demo",
      "sourcesContent": [
        "import express from 'express';\nimport path from 'path';\nimport http from 'http';\n\nconst LocalStorage = require('node-localstorage').LocalStorage;\nlet localStorage = new LocalStorage('./scratch');\nconst iplocate = require(\"node-iplocate\");\nconst publicIp = require('public-ip');\nlet io = require('socket.io');\nlet app = express();\n\n\n// Add configure for ui and port\napp.configure(() => {\n    app.set('port', process.env.PORT || 3000);\n    app.use(express.static(path.join(__dirname, 'public')));\n});\n\napp.configure('development', () => {\n    app.use(express.errorHandler());\n});\n\n// Set up express\nlet server = http.createServer(app).listen(app.get('port'), function(){\n    console.log(\"Express server listening on port \" + app.get('port'));\n});\n\n// Set up socket.io\nio = require('socket.io').listen(server);\n\n\n// Handle socket traffic\nio.sockets.on('connection',  (socket) => {\n\n    var list = io.sockets.sockets;\n    var users = Object.keys(list);\n   \n\n\n    // Set the nickname property for a given client\n    socket.on('nick', (nick) => {\n        socket.set('nickname', nick);\n        socket.emit('userlist', users);\n    });\n\n   \n\n    // Relay chat data to all clients\n    socket.on('chat', (data) => {\n        socket.get('nickname', (err, nick) => {\n            publicIp.v4().then(ip => {\n                iplocate(ip).then(function(results) {\n                    let respo = JSON.stringify(results.city, null, 2)\n                    localStorage.setItem('userlocal',respo)\n               });\n            });\n\n            let nickname = err ? 'Anonymous' : nick;\n\n            let payload = {\n                message: data.message,\n                nick: nickname,\n                location:localStorage.getItem('userlocal')\n            };\n\n            socket.emit('chat',payload);\n            socket.broadcast.emit('chat', payload);\n        });\n    });\n});\n\n\n/*\nUse of Radium for Media Queries\n*/"
      ]
    },
    "sourceType": "script",
    "mtime": 1621092359300
  }
}